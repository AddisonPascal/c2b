# c2b Compiler by Addison Djatschenko
# Version 0.8.6
[version=0.8.6]
cmd[setlocal enabledelayedexpansion]
title[C2B Compiler v%version%]
[whileCount=0]
[whileWrite=00]
[bracketString=]
[functionNumber=0]
[moduleID=%random%%random%]
[functionName=[module]]
file.write[sys.bat] {
	print[@echo off]
	print[rem Compiled by the c2b Compiler from c2b v%version%. ]
	print[rem Module ID: %moduleID%]
	print[if "%%alreadyStarted%%"=="" set traceback_callNum=0]
	print[set alreadyStarted=true]
	print[set esc=%esc%]
	print[ver ^| findstr /c:"Version 10"]
	print[if errorlevel 1 goto noWin10%moduleID%]
	print[set esc0m=%esc%[0m]
	print[set esc1m=%esc%[1m]
	print[set esc4m=%esc%[4m]
	print[set esc7m=%esc%[7m]
	print[set esc30m=%esc%[30m]
	print[set esc31m=%esc%[31m]
	print[set esc32m=%esc%[32m]
	print[set esc33m=%esc%[33m]
	print[set esc34m=%esc%[34m]
	print[set esc35m=%esc%[35m]
	print[set esc36m=%esc%[36m]
	print[set esc37m=%esc%[37m]
	print[set esc40m=%esc%[40m]
	print[set esc41m=%esc%[41m]
	print[set esc42m=%esc%[42m]
	print[set esc43m=%esc%[43m]
	print[set esc44m=%esc%[44m]
	print[set esc45m=%esc%[45m]
	print[set esc46m=%esc%[46m]
	print[set esc47m=%esc%[47m]
	print[set esc90m=%esc%[90m]
	print[set esc91m=%esc%[91m]
	print[set esc92m=%esc%[92m]
	print[set esc93m=%esc%[93m]
	print[set esc94m=%esc%[94m]
	print[set esc95m=%esc%[95m]
	print[set esc96m=%esc%[96m]
	print[set esc97m=%esc%[97m]
	print[set esc100m=%esc%[100m]
	print[set esc101m=%esc%[101m]
	print[set esc102m=%esc%[102m]
	print[set esc103m=%esc%[103m]
	print[set esc104m=%esc%[104m]
	print[set esc105m=%esc%[105m]
	print[set esc106m=%esc%[106m]
	print[set esc107m=%esc%[107m]
	print[set escRewrite=%esc%[F%esc%[0J]
	print[cls]
	print[goto startOfFile%moduleID%]
	print[:noWin10%moduleID%]
	print[set esc30m=^^^&powershell write-host -NoNewline -fore Black ]
	print[set esc34m=^^^&powershell write-host -NoNewline -fore Blue ]
	print[set esc32m=^^^&powershell write-host -NoNewline -fore Green ]
	print[set esc36m=^^^&powershell write-host -NoNewline -fore Cyan ]
	print[set esc31m=^^^&powershell write-host -NoNewline -fore Red ]
	print[set esc35m=^^^&powershell write-host -NoNewline -fore Magenta ]
	print[set esc33m=^^^&powershell write-host -NoNewline -fore Yellow ]
	print[set esc37m=^^^&powershell write-host -NoNewline -fore White ]
	print[set esc90m=^^^&powershell write-host -NoNewline -fore Gray ]
	print[set esc94m=^^^&powershell write-host -NoNewline -fore Blue ]
	print[set esc92m=^^^&powershell write-host -NoNewline -fore Green ]
	print[set esc96m=^^^&powershell write-host -NoNewline -fore Cyan ]
	print[set esc91m=^^^&powershell write-host -NoNewline -fore Red ]
	print[set esc95m=^^^&powershell write-host -NoNewline -fore Magenta ]
	print[set esc93m=^^^&powershell write-host -NoNewline -fore Yellow ]
	print[set esc97m=^^^&powershell write-host -NoNewline -fore White ]
	print[set esc0m=^^^&echo(]
	print[cls]
	print[goto startOfFile%moduleID%]
	print[:alertJS%moduleID%]
	print[mshta javascript:alert("%%~1"^);close(^);]
	print[exit/b]
	print[:ifIn%moduleID%]
	print[echo %%~2 ^| findstr /c:%%~1]
	print[exit /b %errorlevel%]
	print[:tracing_back_%moduleID%]
	print[if %%tracing_back%%==%%traceback_callNum%% goto end_tracing_back_%moduleID%]
	print[set /a tracing_back=%%tracing_back%%+1]
	print[call echo %%%%traceback_module_%%tracing_back%%%%%% [module ID %%%%traceback_moduleID_%%tracing_back%%%%%%], line %%%%traceback_linenum_%%tracing_back%%%%%%, in %%%%traceback_function_%%tracing_back%%%%%%:]
	print[call echo %%%%traceback_line_%%tracing_back%%%%%%]
	print[goto tracing_back_%moduleID%]
	print[:end_tracing_back_%moduleID%]
	print[exit /b]
	print[:startOfFile%moduleID%]
}
if[%1.==.] {
	del[sys.bat]
	raise Error: Use c2b compiler by opening a c2b file with it.
}
define.function[getFilename] {
	[fileName=%~nx1]
}
$getFilename %1
[moduleName=%fileName:~0,-4%]
clear
[location=%1]
cmd[(]
cmd[type %location%]
cmd[echo.]
cmd[)|clip]
del[%location:~0,-4%.bat"]
print[Automatically compiling...]
skey[^(v)]
while[True] {
	incr[line]
	[cmd=~linebreak]
	define.prompt[cmd="%line% | "]
	if["!cmd!"=="~linebreak"] {
		$linebreak
		goto[anotherLine]
	}
	$convertCommand
	place[anotherLine]
}
define.function[linebreak] {
	file.append[sys.bat] {
		print[]
	}
}
define.function[abs] {
	if[/i "!cmd!"=="%arg1%"] {
		$%arg2%
	}
}
define.function[convertCommand] {
	while["!cmd:~0,1!"==" "] {
		[cmd=!cmd:~1!]
	}
if["!cmd:~0,1!"=="#"] {
[cmdc=!cmd:~1,-1!]
$comment
return
}
if[/i "!cmd:~0,5!"=="print"] {
[cmdc=!cmd:~6,-1!]
$print
return
}
if[/i "!cmd:~0,4!"=="wait"] {
[cmdc=!cmd:~5,-1!]
$wait
return
}
if[/i "!cmd:~0,3!"=="end"] {
[cmdc=!cmd:~4,-1!]
$end
return
}
if[/i "!cmd:~0,6!"=="export"] {
[cmdc=!cmd:~7,-1!]
$export
return
}
if[/i "!cmd:~0,4!"=="disp"] {
[cmdc=!cmd:~5,-1!]
$disp
return
}
if[/i "!cmd:~0,5!"=="clear"] {
[cmdc=!cmd:~6,-1!]
$clear
return
}
if[/i "!cmd:~0,4!"=="ifin"] {
[cmdc=!cmd:~5,-3!]
$ifin
return
}
if[/i "!cmd:~0,2!"=="if"] {
[cmdc=!cmd:~3,-1!]
$if
return
}
if[/i "!cmd:~0,6!"=="} elif"] {
[cmdc=!cmd:~7,-1!]
$elif
return
}
if[/i "!cmd:~0,3!"=="cmd"] {
[cmdc=!cmd:~4,-1!]
$batcmd
return
}
if[/i "!cmd:~0,5!"=="title"] {
[cmdc=!cmd:~6,-1!]
$title
return
}
if[/i "!cmd:~0,6!"=="define"] {
[cmdc=!cmd:~7,-1!]
$define
return
}
if[/i "!cmd:~0,5!"=="place"] {
[cmdc=!cmd:~6,-1!]
$place
return
}
if[/i "!cmd:~0,4!"=="goto"] {
[cmdc=!cmd:~5,-1!]
$goto
return
}
if["!cmd:~0,1!"=="$"] {
[cmdc=!cmd:~2,-1!]
$callFunction
return
}
if[/i "!cmd:~0,6!"=="prompt"] {
[cmdc=!cmd:~7,-1!]
$prompt
return
}
if[/i "!cmd:~0,8!"=="download"] {
[cmdc=!cmd:~9,-1!]
$download
return
}
if[/i "!cmd:~0,3!"=="ren"] {
[cmdc=!cmd:~4,-1!]
$ren
return
}
if[/i "!cmd:~0,3!"=="del"] {
[cmdc=!cmd:~4,-1!]
$del
return
}
if[/i "!cmd:~0,6!"=="mkfile"] {
[cmdc=!cmd:~7,-1!]
$mkfile
return
}
if[/i "!cmd:~0,8!"=="mkfolder"] {
[cmdc=!cmd:~9,-1!]
$mkfolder
return
}
if[/i "!cmd:~0,4!"=="file"] {
[cmdc=!cmd:~5,-1!]
$file
return
}
if[/i "!cmd:~0,4!"=="play"] {
[cmdc=!cmd:~5,-1!]
$play
return
}
if[/i "!cmd:~0,5!"=="while"] {
[cmdc=!cmd:~6,-1!]
$while
return
}
if[/i "!cmd:~0,4!"=="incr"] {
[cmdc=!cmd:~5,-1!]
$incr
return
}
if[/i "!cmd:~0,6!"=="repeat"] {
[cmdc=!cmd:~7,-1!]
$repeat
return
}
if[/i "!cmd:~0,5!"=="break"] {
[cmdc=!cmd:~6,-1!]
$break
return
}
if[/i "!cmd:~0,6!"=="return"] {
[cmdc=!cmd:~7,-1!]
$return
return
}
if[/i "!cmd:~0,4!"=="open"] {
[cmdc=!cmd:~5,-1!]
$open
return
}
if[/i "!cmd:~0,4!"=="skey"] {
[cmdc=!cmd:~5,-1!]
$skey
return
}
if[/i "!cmd:~0,2!"=="ps"] {
[cmdc=!cmd:~3,-1!]
$ps
return
}
if[/i "!cmd:~0,5!"=="alert"] {
[cmdc=!cmd:~6,-1!]
$alert
return
}
if[/i "!cmd:~0,5!"=="color"] {
[cmdc=!cmd:~6,-1!]
$colour
return
}
if[/i "!cmd:~0,6!"=="colour"] {
[cmdc=!cmd:~7,-1!]
$colour
return
}
if[/i "!cmd:~0,7!"=="restart"] {
[cmdc=!cmd:~8,-1!]
$restart
return
}
if[/i "!cmd:~0,3!"=="out"] {
[cmdc=!cmd:~4,-1!]
$out
return
}
if[/i "!cmd:~0,7!"=="rewrite"] {
[cmdc=!cmd:~8,-1!]
$rewrite
return
}
if[/i "!cmd:~0,6!"=="choice"] {
[cmdc=!cmd:~7,-1!]
$choice
return
}
if[/i "!cmd:~0,4!"=="stop"] {
[cmdc=!cmd:~5,-1!]
$stop
return
}
if[/i "!cmd:~0,5!"=="close"] {
[cmdc=!cmd:~6,-1!]
$stop
return
}
if[/i "!cmd:~0,6!"=="import"] {
	[cmdc=!cmd:~7!]
	$import
	return
}
if[/i "!cmd:~0,5!"=="raise"] {
	[cmdc=!cmd:~6!]
	$raise
	return
}
if["!cmd:~0,1!"=="["] {
[cmdc=!cmd:~2,-1!]
$setQuick
return
}
$abs } closeBracket
$abs "} else {" else
}
define.function[ifin] {
	[cmdc=!cmdc:^,= ]
	[bracketString=%bracketString%I]
	file.append[sys.bat] {
		print[call :ifIn%moduleID% !cmdc!]
		print[if %errorlevel% NEQ 1 (]
	}
}
define.function[stop] {
	file.append[sys.bat] {
		print[taskkill /im !cmdc! /f]
	}
}
define.function[choice] {
	file.append[sys.bat] {
		print[set choices=!cmdc!]
		print[choice /c !cmdc! ^>nul]
		print[set /a choiceNum=%%errorlevel%%-1]
		print[call set choice=%%%%choices:~%%choiceNum%%,1%%%%]
	}
}
define.function[rewrite] {
	cmd[echo %bracketString% | findstr A >nul]
	if[not errorlevel 1] {
		goto[rawRewrite]
	}
	cmd[echo %bracketString% | findstr R >nul]
	if[not errorlevel 1] {
		goto[rawRewrite]
	}
	$sortColours
	place[rawRewrite]
	file.append[sys.bat] {
		print[echo %%escRewrite%%!cmdc!]
	}
}
define.function[out] {
	cmd[echo %bracketString% | findstr A >nul]
	if[not errorlevel 1] {
		goto[rawOut]
	}
	cmd[echo %bracketString% | findstr R >nul]
	if[not errorlevel 1] {
		goto[rawOut]
	}
	$sortColours
	place[rawOut]
	file.append[sys.bat] {
		print[echo ^| set /p ^^="!cmdc!"]
	}
}
define.function[restart] {
	file.append[sys.bat] {
		print[goto startOfFile%moduleID%]
	}
}
define.function[colour] {
	file.append[sys.bat] {
		print[color !cmdc!]
	}
}
define.function[alert] {
	[cmdc=!cmdc:"='!]
	file.append[sys.bat] {
		print[call :alertJS%moduleID% "!cmdc!"]
	}
}
define.function[elif] {
	[cmdc=!cmdc:~0,-2!]
	[cmdc=!cmdc:^>= GTR !]
	[cmdc=!cmdc:^<= LSS !]
	[cmdc=!cmdc:^&= if !]
	file.append[sys.bat] {
		print[^) else if !cmdc! (]
	}
}
define.function[ps] {
	[cmdc=!cmdc:"='!]
	file.append[sys.bat] {
		print[powershell -Command "!cmdc!"]
	}
}
define.function[else] {
	file.append[sys.bat] {
		print[^) else (]
	}
}
define.function[skey] {
	file.append[sys.bat] {
		print[set skey_id=%%random%%]
		print[(]
		print[echo Set WshShell = WScript.CreateObject("WScript.Shell"^^^)]
		print[echo WshShell.SendKeys "!cmdc!"]
		print[^)^>"%%temp%%\%%skey_id%%.vbs"]
		print[start "" "%%temp%%\%%skey_id%%.vbs"]
	}
}
define.function[file] {
	[cmd=!cmdc!]
	if[/i "!cmd:~0,5!"=="write"] {
		[cmdc=!cmd:~6,-1!]
		$write
	} elif[/i "!cmd:~0,6!"=="append"] {
		[cmdc=!cmd:~7,-1!]
		$append
	}
	[cmdc=!cmdc:~0,-1!]
	file.append[sys.bat] {
		print[set opened_file=!cmdc!]
		print[(]
	}
}
define.function[append] {
	[bracketString=%bracketString%A]
}
define.function[write] {
	[bracketString=%bracketString%R]
}
define.function[open] {
	file.append[sys.bat] {
		print[start "" !cmdc!]
	}
}
define.function[setQuick] {
	[cmdc=!cmd:~1,1!!cmdc!]
	file.append[sys.bat] {
		print[set !cmdc!]
	}
}
define.function[return] {
	file.append[sys.bat] {
		print[set /a traceback_callNum=%%traceback_callNum%%-1]
		print[exit /b]
	}
}
define.function[break] {
	[whileWriting=%whileWrite:~-2,2%]
	file.append[sys.bat] {
		print[goto afterwhile%whileWriting%%moduleID%]
	}
}
define.function[closeBracket] {
	if["%bracketString:~-1,1%"=="I"] {
		$endIf
	} elif["%bracketString:~-1,1%"=="W"] {
		$endWhile
	} elif["%bracketString:~-1,1%"=="F"] {
		$endFunction
	} elif["%bracketString:~-1,1%"=="R"] {
		$endWrite
	} elif["%bracketString:~-1,1%"=="A"] {
		$endAppend
	}
	[bracketString=%bracketString:~0,-1%]
}
define.function[repeat] {
	[cmdc=!cmdc:~0,-2!]
	[bracketString=%bracketString%W]
	incr[whileCount]
	[whileWriting=%whileCount%]
	if["%whileWriting:~1,1%"==""] {
		[whileWriting=0%whileWriting%]
	}
	[whileWrite=%whileWrite%%whileWriting%]
	file.append[sys.bat] {
		print[set repeatCounting%whileWriting%=-1]
		print[call :while%whileWriting%%moduleID%]
		print[goto afterwhile%whileWriting%%moduleID%]
		print[:while%whileWriting%%moduleID%]
		print[set /a repeatCounting%whileWriting%=%%repeatCounting%whileWriting%%%+1]
		print[if %%repeatCounting%whileWriting%%% LSS !cmdc! call :whiling%whileWriting%%moduleID%]
		print[goto afterwhile%whileWriting%%moduleID%]
		print[exit /b]
		print[:whiling%whileWriting%%moduleID%]
	}
}
define.function[incr] {
	file.append[sys.bat] {
		print[set /a !cmdc!=%%!cmdc!%%+1]
	}
}
define.function[while] {
	[cmdc=!cmdc:~0,-2!]
	[cmdc=!cmdc:^>= GTR !]
	[cmdc=!cmdc:^<= LSS !]
	[cmdc=!cmdc:true=1 EQU 1!]
	[cmdc=!cmdc:True=1 EQU 1!]
	[bracketString=%bracketString%W]
	[cmdc=!cmdc:^&= if !]
	incr[whileCount]
	[whileWriting=%whileCount%]
	if["%whileWriting:~1,1%"==""] {
		[whileWriting=0%whileWriting%]
	}
	[whileWrite=%whileWrite%%whileWriting%]
	file.append[sys.bat] {
		print[:while%whileWriting%%moduleID%]
		print[if !cmdc! (]
		print[goto whiling%whileWriting%%moduleID%]
		print[^) else (]
		print[goto afterwhile%whileWriting%%moduleID%]
		print[^)]
		print[:whiling%whileWriting%%moduleID%]
	}
}
define.function[endWhile] {
	[whileWriting=%whileWrite:~-2,2%]
	[whileWrite=%whileWrite:~0,-2%]
	file.append[sys.bat] {
		print[goto while%whileWriting%%moduleID%]
		print[:afterwhile%whileWriting%%moduleID%]
	}
}
define.function[play] {
	file.append[sys.bat] {
		print[powershell [console]::Beep(!cmdc!^)]
	}
}
define.function[endWrite] {
	file.append[sys.bat] {
		print[^)^>%%opened_file%%]
	}
}
define.function[endAppend] {
	file.append[sys.bat] {
		print[^)^>^>%%opened_file%%]
	}
}
define.function[mkfolder] {
	file.append[sys.bat] {
		print[md !cmdc!]
	}
}
define.function[mkfile] {
	file.append[sys.bat] {
		print[echo.^>!cmdc!]
	}
}
define.function[del] {
	file.append[sys.bat] {
		print[del !cmdc!]
	}
}
define.function[ren] {
	file.append[sys.bat] {
		print[ren !cmdc!]
	}
}
define.function[download] {
	file.append[sys.bat] {
		print[powershell -Command "(New-Object Net.WebClient).DownloadFile('!cmdc!', 'download')"]
	}
}
define.function[prompt] {
	file.append[sys.bat] {
		print[set /p !cmdc!=""]
	}
}
define.function[define] {
	if[/i "!cmdc:~0,4!"=="text"] {
		$defineText
	} elif[/i "!cmdc:~0,6!"=="prompt"] {
		$definePrompt
	} elif[/i "!cmdc:~0,4!"=="math"] {
		$defineMath
	} elif[/i "!cmdc:~0,8!"=="function"] {
		$defineFunction
	} else {
		$plainDefine
	}
}
define.function[definePrompt] {
	[cmdc=!cmd:~14,-1!]
	file.append[sys.bat] {
		print[set /p !cmdc!]
	}
}
define.function[defineMath] {
	[cmdc=!cmd:~12,-1!]
	file.append[sys.bat] {
		print[set /a !cmdc!]
	}
}
define.function[defineText] {
	[cmdc=!cmd:~12,-1!]
	file.append[sys.bat] {
		print[set !cmdc!]
	}
}
define.function[plainDefine] {
	file.append[sys.bat] {
		print[set !cmdc!]
	}
}
define.function[callFunction] {
	[cmdc=!cmd:~1!]
	file.append[sys.bat] {
		print[set /a traceback_callNum=%%traceback_callNum%%+1]
		print[set traceback_line_%%traceback_callNum%%=!cmd!]
		print[set traceback_linenum_%%traceback_callNum%%=%line%]
		print[set traceback_module_%%traceback_callNum%%=%moduleName%]
		print[set traceback_moduleID_%%traceback_callNum%%=%moduleID%]
		print[set traceback_function_%%traceback_callNum%%=%functionName%]
		print[call :!cmdc!]
	}
}
define.function[goto] {
	file.append[sys.bat] {
		print[goto !cmdc!]
	}
}
define.function[place] {
	file.append[sys.bat] {
		print[:!cmdc!]
	}
}
define.function[title] {
	file.append[sys.bat] {
		print[title !cmdc!]
	}
}
define.function[comment] {
	[cmdc=!cmd:~1!]
	file.append[sys.bat] {
		print[::!cmdc!]
	}
}
define.function[endFunction] {
	[functionName=[module]]
	file.append[sys.bat] {
		print[set /a traceback_callNum=%%traceback_callNum%%-1]
		print[exit /b]
		print[:endfunction%functionNumber%%moduleID%]
	}
}
define.function[defineFunction] {
	[bracketString=%bracketString%F]
	incr[functionNumber]
	[cmdc=!cmd:~16,-3!]
	[functionName=!cmdc!]
	file.append[sys.bat] {
		print[goto endfunction%functionNumber%%moduleID%]
		print[:!cmdc!]
		print[set arg1=%%~1]
		print[set arg2=%%~2]
		print[set arg3=%%~3]
		print[set arg4=%%~4]
		print[set arg5=%%~5]
	}
}
define.function[batcmd] {
	file.append[sys.bat] {
		print[!cmdc!]
	}
}
define.function[endIf] {
	file.append[sys.bat] {
		print[^)]
	}
}
define.function[if] {
	[cmdc=!cmd:~3,-3!]
	[cmdc=!cmdc:^>= GTR !]
	[cmdc=!cmdc:^<= LSS !]
	[bracketString=%bracketString%I]
	[cmdc=!cmdc:^&= if !]
	file.append[sys.bat] {
		print[if !cmdc! ^(]
	}
}
define.function[disp] {
	file.append[sys.bat] {
		print[mode 1000]
	}
}
define.function[sortColours] {
	[cmdc=!cmdc:\n=^&echo(!]
	[cmdc=!cmdc:@reset=%%esc0m%%!]
	[cmdc=!cmdc:@r=%%esc0m%%!]
	[cmdc=!cmdc:@bold=%%esc1m%%!]
	[cmdc=!cmdc:@underline=%%esc4m%%!]
	[cmdc=!cmdc:@u=%%esc4m%%!]
	[cmdc=!cmdc:@inverse=%%esc7m%%!]
	[cmdc=!cmdc:@i=%%esc7m%%!]
	[cmdc=!cmdc:@0=%%esc40m%%#!]
	[cmdc=!cmdc:@1=%%esc44m%%#!]
	[cmdc=!cmdc:@2=%%esc42m%%#!]
	[cmdc=!cmdc:@3=%%esc46m%%#!]
	[cmdc=!cmdc:@4=%%esc41m%%#!]
	[cmdc=!cmdc:@5=%%esc45m%%#!]
	[cmdc=!cmdc:@6=%%esc43m%%#!]
	[cmdc=!cmdc:@7=%%esc47m%%#!]
	[cmdc=!cmdc:@8=%%esc100m%%#!]
	[cmdc=!cmdc:@9=%%esc104m%%#!]
	[cmdc=!cmdc:@a=%%esc102m%%#!]
	[cmdc=!cmdc:@b=%%esc106m%%#!]
	[cmdc=!cmdc:@c=%%esc101m%%#!]
	[cmdc=!cmdc:@d=%%esc105m%%#!]
	[cmdc=!cmdc:@e=%%esc103m%%#!]
	[cmdc=!cmdc:@f=%%esc107m%%#!]
	[cmdc=!cmdc:#0=%%esc30m%%!]
	[cmdc=!cmdc:#1=%%esc34m%%!]
	[cmdc=!cmdc:#2=%%esc32m%%!]
	[cmdc=!cmdc:#3=%%esc36m%%!]
	[cmdc=!cmdc:#4=%%esc31m%%!]
	[cmdc=!cmdc:#5=%%esc35m%%!]
	[cmdc=!cmdc:#6=%%esc33m%%!]
	[cmdc=!cmdc:#7=%%esc37m%%!]
	[cmdc=!cmdc:#8=%%esc90m%%!]
	[cmdc=!cmdc:#9=%%esc94m%%!]
	[cmdc=!cmdc:#a=%%esc92m%%!]
	[cmdc=!cmdc:#b=%%esc96m%%!]
	[cmdc=!cmdc:#c=%%esc91m%%!]
	[cmdc=!cmdc:#d=%%esc95m%%!]
	[cmdc=!cmdc:#e=%%esc93m%%!]
	[cmdc=!cmdc:#f=%%esc97m%%!]
	[cmdc=!cmdc!%%esc0m%%]
}
define.function[print] {
	if["!cmdc!"==""] {
		$emptyPrint
		return
	}
	cmd[echo %bracketString% | findstr A >nul]
	if[not errorlevel 1] {
		goto[rawPrint]
	}
	cmd[echo %bracketString% | findstr R >nul]
	if[not errorlevel 1] {
		goto[rawPrint]
	}
	$sortColours
	place[rawPrint]
	file.append[sys.bat] {
		print[echo(!cmdc!]
	}
}
define.function[emptyPrint] {
	file.append[sys.bat] {
		print[echo.]
	}
}
define.function[end] {
	file.append[sys.bat] {
		print[exit]
	}
}
define.function[wait] {
	if[/i "!cmdc!"=="user"] {
		$waitUser
	} else {
		$waitTime
	}
}
define.function[waitUser] {
	file.append[sys.bat] {
		print[pause^>nul]
	}
}
define.function[waitTime] {
	file.append[sys.bat] {
		print[timeout /t !cmdc! /nobreak ^>nul]
	}
}
define.function[clear] {
	file.append[sys.bat] {
		print[cls]
	}
}
define.function[raise] {
	file.append[sys.bat] {
		print[echo. ]
		print[color 0c]
		print[echo Exception: !cmdc!]
		print[echo.]
		print[echo Traceback [most recent call last]:]
		print[echo.]
		print[set tracing_back=0]
		print[:call tracing_back_%moduleID%]
		print[echo %moduleName% [module ID %moduleID%], line %line%, in %functionName%:]
		print[echo !cmd!]
		print[echo.]
		print[pause]
		print[exit]
	}
}
define.function[import] {
	if["!cmdc:~0,4!"=="net:"] {
		[cmdc=!cmdc:~4!]
		$import_net
		return
	}
	if["!cmdc:~0,6!"=="local:"] {
		[cmdc=!cmdc:~6!]
		$import_local
		return
	}
	if["!cmdc:~0,8!"=="inbuilt:"] {
		[cmdc=!cmdc:~8!]
		$import_inbuilt
		return
	}
	if[exist "!cmdc!.bat"] {
		$import_local
		return
	}
	if[exist "%~dp0modules\!cmdc!.bat"] {
		$import_inbuilt
		return
	}
	$import_net
}
define.function[import_net] {
	del[download]
	download[https://raw.githubusercontent.com/AddisonPascal/c2b/master/modules/!cmdc!.bat]
	if[not exist download] {
		raise Error: Cannot find online module.
	}
	file.append[sys.bat] {
		cmd[type download]
		print[]
	}
	del[download]
}
define.function[import_local] {
	if[not exist "!cmdc!.bat"] {
		raise Error: Cannot find local module.
	}
	file.append[sys.bat] {
		cmd[type "!cmdc!.bat"]
		print[]
	}
}
define.function[import_inbuilt] {
	if[not exist "%~dp0modules\!cmdc!.bat"] {
		raise Error: Cannot find inbuilt module
	}
	file.append[sys.bat] {
		cmd[type "%~dp0modules\!cmdc!.bat"]
		print[]
	}
}
define.function[export] {
	[new_location=%location:~0,-4%.bat"]
	cmd[copy sys.bat %new_location%]
	del[sys.bat]
	title[ ]
	cmd[endlocal]
	[traceback_callNum=0]
	clear
	cmd[call %new_location%]
	end[file]
}
export
