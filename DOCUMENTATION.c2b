# Documenting most aspects of c2b [Compiles to Batch] programming language.

# A comment's syntax is a hashtag [#] at the start of a line. Only one line comments are available in C2B. 
# A comment

# To print a line to the console, use print[text]
print[This is a message. ]
# Blank line:
print[]

# Waits a certain amount of time: wait[seconds]
wait[3]
# Waits for the user to press any key: 
wait[user]

# Exits file:
end[file]

# Maximises screen: disp[max]
disp[max]

# Clears the screen: clear
clear

# If statement:	if[statement] {
#				content
#				}
if[%this%==%that%] {
	print[This is that]
}

# Executes a Windows Batch / CMD command: cmd[command]
cmd[echo Hi]

# Executes a Windows PowerShell command:	ps[command]
ps[echo("Hi!");]
ps[[console]::Beep();]

# Changes title: title[text]
title[This is the title. ]

# Makes a function:	define.function[name] {
#					content
#					}
define.function[function] {
	print[This is a function]
	print[%arg1%]
	print[%arg2%]
	print[%arg3%]
}

# A place in the code which can be returned to later on with goto[]: place[name]
place[place]

# Goes to a specified place[] in the code: goto[place]
goto[place]

# Executes a function: $function arg1 arg2 arg3...
$function "Argument 1" "Argument 2" "Argument 3"

# Defines a variable:	define[var=text] OR define.text[var=text]
#						define.math[var=expression]
#						define.prompt[var=prompt]
#						[var=content]
#						[var=expression]
define[textVar=This is text]
define.text[textVar2=This is also text]
define.math[mathVar=1+1]
define.prompt[userVar=Enter text here: ]
[textVar3=This is text]

# Saves input to variable: prompt[var]
prompt[userVar2]

# Downloads a file from the internet (saved as 'download'): download[URL]
download[http://raw.githubusercontent.com/AddisonPascal/c2b/master/C2B%20Compiler.bat]

# Renames a file: ren[originalname newname]
ren[filename newfilename]

# Deletes a file: del[file]
del[file]

# Makes a new file: mkfile[name]
mkfile[file]

# Makes a new folder: mkfolder[name]
mkfolder[folder]

# Plays a note: play[frequency(hz), time(ms)]
play[1000,1000]

# Writes the output of commands to a file:	file.write[filename] {
#											content
#											}
file.write[file.txt] {
	print[This will be in a file]
}

# Writes the output of commands to the end of a file:	file.append[filename] {
#														content
#														}
file.append[file.txt] {
	print[This will be at the bottom of a file]
}

# Executes commands while a condition is true:	while[condition] {
#												content
#												}
define[a=0]
while[%a%<10] {
	print[%a%]
	incr[a]
}

# Increments a variable:
incr[var]

# Repeats commands:	repeat[number]:
#					content
#					break[]
repeat[10] {
	print[Hello World!]
}

# Breaks out of a loop:	break
break

# Returns from a function:	return
return

# Sends keys to the focused window:	skey[keys]
skey[Hello{ENTER}World{!}]

# Opens a file, application, or website:	open[filename/address]
open[file.txt]
open[notepad]
open[http://google.com]

# Else statement: if the previous if statement wasn't true: if[condition] {
#															content
#															} else {
#															content
#															}
if[%this%==%that%] {
	print[This is that.]
} else {
	print[This is not that]
}

# Ends compilation. All text past here is ignored: export
export